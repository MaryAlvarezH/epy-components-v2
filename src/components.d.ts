/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  SelectItem,
} from './components/epy-select/epy-select';

export namespace Components {
  interface EpyButton {
    'disabled': boolean;
    'type': string;
  }
  interface EpyCard {
    'type': string;
  }
  interface EpyCheckbox {
    'isChecked': boolean;
    'label': string;
  }
  interface EpyDroptip {
    'contentBgColor': string;
  }
  interface EpyIcon {
    'icon': string;
  }
  interface EpyInput {
    'clear': boolean;
    'disabled': boolean;
    'errorLabel': string;
    'inputType': string;
    'label': string;
    'labelHelper': string;
    'maxlength': number;
    'minlength': number;
    'placeholder': string;
    'required': boolean;
    'requiredLabel': string;
    'rows': number;
    'type': string;
    'validationStatus': string;
    'value': any;
  }
  interface EpyLoader {
    'type': string;
  }
  interface EpyPopover {
    'distance': number;
    'placement': any;
    'skidding': number;
    'triggerEvent': string;
    'width': string;
  }
  interface EpySelect {
    'epyClass': string;
    'filter': boolean;
    'filterPlaceholder': string;
    'label': string;
    'labelHelper': string;
    'leftIcon': string;
    'notFoundCopy': string;
    'options': Array<string | SelectItem>;
    'placeholder': string;
    'rightIcon': string;
    'textColor': string;
    'value': any;
  }
  interface EpyTooltip {
    'distance': number;
    'placement': any;
    'skidding': number;
  }
}

declare global {


  interface HTMLEpyButtonElement extends Components.EpyButton, HTMLStencilElement {}
  var HTMLEpyButtonElement: {
    prototype: HTMLEpyButtonElement;
    new (): HTMLEpyButtonElement;
  };

  interface HTMLEpyCardElement extends Components.EpyCard, HTMLStencilElement {}
  var HTMLEpyCardElement: {
    prototype: HTMLEpyCardElement;
    new (): HTMLEpyCardElement;
  };

  interface HTMLEpyCheckboxElement extends Components.EpyCheckbox, HTMLStencilElement {}
  var HTMLEpyCheckboxElement: {
    prototype: HTMLEpyCheckboxElement;
    new (): HTMLEpyCheckboxElement;
  };

  interface HTMLEpyDroptipElement extends Components.EpyDroptip, HTMLStencilElement {}
  var HTMLEpyDroptipElement: {
    prototype: HTMLEpyDroptipElement;
    new (): HTMLEpyDroptipElement;
  };

  interface HTMLEpyIconElement extends Components.EpyIcon, HTMLStencilElement {}
  var HTMLEpyIconElement: {
    prototype: HTMLEpyIconElement;
    new (): HTMLEpyIconElement;
  };

  interface HTMLEpyInputElement extends Components.EpyInput, HTMLStencilElement {}
  var HTMLEpyInputElement: {
    prototype: HTMLEpyInputElement;
    new (): HTMLEpyInputElement;
  };

  interface HTMLEpyLoaderElement extends Components.EpyLoader, HTMLStencilElement {}
  var HTMLEpyLoaderElement: {
    prototype: HTMLEpyLoaderElement;
    new (): HTMLEpyLoaderElement;
  };

  interface HTMLEpyPopoverElement extends Components.EpyPopover, HTMLStencilElement {}
  var HTMLEpyPopoverElement: {
    prototype: HTMLEpyPopoverElement;
    new (): HTMLEpyPopoverElement;
  };

  interface HTMLEpySelectElement extends Components.EpySelect, HTMLStencilElement {}
  var HTMLEpySelectElement: {
    prototype: HTMLEpySelectElement;
    new (): HTMLEpySelectElement;
  };

  interface HTMLEpyTooltipElement extends Components.EpyTooltip, HTMLStencilElement {}
  var HTMLEpyTooltipElement: {
    prototype: HTMLEpyTooltipElement;
    new (): HTMLEpyTooltipElement;
  };
  interface HTMLElementTagNameMap {
    'epy-button': HTMLEpyButtonElement;
    'epy-card': HTMLEpyCardElement;
    'epy-checkbox': HTMLEpyCheckboxElement;
    'epy-droptip': HTMLEpyDroptipElement;
    'epy-icon': HTMLEpyIconElement;
    'epy-input': HTMLEpyInputElement;
    'epy-loader': HTMLEpyLoaderElement;
    'epy-popover': HTMLEpyPopoverElement;
    'epy-select': HTMLEpySelectElement;
    'epy-tooltip': HTMLEpyTooltipElement;
  }
}

declare namespace LocalJSX {
  interface EpyButton {
    'disabled'?: boolean;
    'onEpyclick'?: (event: CustomEvent<any>) => void;
    'type'?: string;
  }
  interface EpyCard {
    'type'?: string;
  }
  interface EpyCheckbox {
    'isChecked'?: boolean;
    'label'?: string;
    'onCheckedEvent'?: (event: CustomEvent<any>) => void;
  }
  interface EpyDroptip {
    'contentBgColor'?: string;
  }
  interface EpyIcon {
    'icon'?: string;
  }
  interface EpyInput {
    'clear'?: boolean;
    'disabled'?: boolean;
    'errorLabel'?: string;
    'inputType'?: string;
    'label'?: string;
    'labelHelper'?: string;
    'maxlength'?: number;
    'minlength'?: number;
    'onEpychange'?: (event: CustomEvent<any>) => void;
    'placeholder'?: string;
    'required'?: boolean;
    'requiredLabel'?: string;
    'rows'?: number;
    'type'?: string;
    'validationStatus'?: string;
    'value'?: any;
  }
  interface EpyLoader {
    'type'?: string;
  }
  interface EpyPopover {
    'distance'?: number;
    'placement'?: any;
    'skidding'?: number;
    'triggerEvent'?: string;
    'width'?: string;
  }
  interface EpySelect {
    'epyClass'?: string;
    'filter'?: boolean;
    'filterPlaceholder'?: string;
    'label'?: string;
    'labelHelper'?: string;
    'leftIcon'?: string;
    'notFoundCopy'?: string;
    'onSelectChange'?: (event: CustomEvent<any>) => void;
    'options'?: Array<string | SelectItem>;
    'placeholder'?: string;
    'rightIcon'?: string;
    'textColor'?: string;
    'value'?: any;
  }
  interface EpyTooltip {
    'distance'?: number;
    'placement'?: any;
    'skidding'?: number;
  }

  interface IntrinsicElements {
    'epy-button': EpyButton;
    'epy-card': EpyCard;
    'epy-checkbox': EpyCheckbox;
    'epy-droptip': EpyDroptip;
    'epy-icon': EpyIcon;
    'epy-input': EpyInput;
    'epy-loader': EpyLoader;
    'epy-popover': EpyPopover;
    'epy-select': EpySelect;
    'epy-tooltip': EpyTooltip;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'epy-button': LocalJSX.EpyButton & JSXBase.HTMLAttributes<HTMLEpyButtonElement>;
      'epy-card': LocalJSX.EpyCard & JSXBase.HTMLAttributes<HTMLEpyCardElement>;
      'epy-checkbox': LocalJSX.EpyCheckbox & JSXBase.HTMLAttributes<HTMLEpyCheckboxElement>;
      'epy-droptip': LocalJSX.EpyDroptip & JSXBase.HTMLAttributes<HTMLEpyDroptipElement>;
      'epy-icon': LocalJSX.EpyIcon & JSXBase.HTMLAttributes<HTMLEpyIconElement>;
      'epy-input': LocalJSX.EpyInput & JSXBase.HTMLAttributes<HTMLEpyInputElement>;
      'epy-loader': LocalJSX.EpyLoader & JSXBase.HTMLAttributes<HTMLEpyLoaderElement>;
      'epy-popover': LocalJSX.EpyPopover & JSXBase.HTMLAttributes<HTMLEpyPopoverElement>;
      'epy-select': LocalJSX.EpySelect & JSXBase.HTMLAttributes<HTMLEpySelectElement>;
      'epy-tooltip': LocalJSX.EpyTooltip & JSXBase.HTMLAttributes<HTMLEpyTooltipElement>;
    }
  }
}


